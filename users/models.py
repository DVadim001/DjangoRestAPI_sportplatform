from django.db import models
from django.contrib.auth.models import User
from django.utils.translation import gettext_lazy as _
from phonenumber_field.modelfields import PhoneNumberField
from clubs.models import Club

# üëâ –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ—ë –∫–∞–∫ default=...
def default_privacy_settings():
    return {
        "show_email": True,
        "show_birth_date": False,
        "show_phone": False,
        "allow_messages": True
    }

class UserProfile(models.Model):
    class GenderChoices(models.TextChoices):
        MALE = 'M', '–ú—É–∂—Å–∫–æ–π'
        FEMALE = 'F', '–ñ–µ–Ω—Å–∫–∏–π'
        OTHER = 'O', '–î—Ä—É–≥–æ–µ'

    user = models.OneToOneField(User, on_delete=models.CASCADE, related_name='profile')
    avatar = models.ImageField(upload_to='avatars/', blank=True, null=True, verbose_name=_("–ê–≤–∞—Ç–∞—Ä"))
    bio = models.TextField(blank=True, verbose_name=_("–û —Å–µ–±–µ"))

    phone_number = PhoneNumberField(blank=True, null=True, verbose_name=_("–¢–µ–ª–µ—Ñ–æ–Ω"))
    birth_date = models.DateField(blank=True, null=True, verbose_name=_("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è"))
    gender = models.CharField(max_length=1, choices=GenderChoices.choices, blank=True, null=True, verbose_name=_("–ü–æ–ª"))
    height = models.FloatField(blank=True, null=True, verbose_name=_("–†–æ—Å—Ç (—Å–º)"))
    weight = models.FloatField(blank=True, null=True, verbose_name=_("–í–µ—Å (–∫–≥)"))
    experience_level = models.CharField(max_length=100, blank=True, verbose_name=_("–û–ø—ã—Ç"))
    preferred_sports = models.CharField(max_length=255, blank=True, verbose_name=_("–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∏–¥—ã —Å–ø–æ—Ä—Ç–∞"))
    medical_information = models.TextField(blank=True, verbose_name=_("–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"))
    equipment = models.CharField(max_length=255, blank=True, verbose_name=_("–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å"))

    club_memberships = models.ManyToManyField('clubs.Club', related_name='user_memberships', blank=True)
    subscriptions = models.ManyToManyField(User, blank=True, related_name='subscribers')

    receive_newsletters = models.BooleanField(default=False, verbose_name=_("–ü–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏"))
    public_profile = models.BooleanField(default=True, verbose_name=_("–ü—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å"))

    def __str__(self):
        return f"–ü—Ä–æ—Ñ–∏–ª—å {self.user.username}"


class UserSettings(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE, related_name='settings')
    receive_newsletters = models.BooleanField(default=False, verbose_name="–ü–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏")
    public_profile = models.BooleanField(default=True, verbose_name="–ü—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å")

    # üëâ –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ, –∫–æ—Ç–æ—Ä–æ–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç default_privacy_settings
    privacy_settings = models.JSONField(default=default_privacy_settings, blank=True, verbose_name="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏")

    def __str__(self):
        return f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ {self.user.username}"
